//
//  DetailPresenter.swift
//  themovies
//
//  Created by Luis Domingues on 03/06/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailPresentationLogic {
    func presentMovieDetail(response: Detail.MovieDetail.Response)
}

class DetailPresenter: DetailPresentationLogic {
    weak var viewController: DetailDisplayLogic?
    
    // MARK: Do something
    func presentMovieDetail(response: Detail.MovieDetail.Response) {
        let runtimeToHours = convertTime(minutes: response.runtime)
        let movieDescription = response.description == "" ? DetailStrings.emptyMovieDescription.localized() : response.description
        let viewModel = Detail.MovieDetail.ViewModel(poster: response.poster,
                                                     title: response.title,
                                                     description: movieDescription,
                                                     releaseDate: "🗓 \(response.releaseDate) (BR)",
                                                     voteAverage: response.voteAverage,
                                                     runtime: runtimeToHours)
        viewController?.displayMovieDetail(viewModel: viewModel)
    }
}

private extension DetailPresenter {
    func convertTime(minutes: Int) -> String {
        let time = (minutes / 60, (minutes % 60))
        return "⏳ \(time.0)h \(time.1)m"
    }
}
