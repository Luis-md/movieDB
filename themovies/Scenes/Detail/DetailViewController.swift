//
//  DetailViewController.swift
//  themovies
//
//  Created by Luis Domingues on 03/06/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailDisplayLogic: AnyObject {
    func displaySomething(viewModel: Detail.Something.ViewModel)
}

extension DetailViewController.Layout {
    enum FontSize: CGFloat {
        case small = 16
        case medium = 20
        case large = 28
    }
    
    enum ComponentSizes: CGFloat {
        case bannerWidth = 124
        case bannerHeight = 188
        case imageSize = 40
        case pillsHeight = 30
        case distance = 16
    }
    
    enum SpaceConstraints: CGFloat {
        case base01 = 16
        case base02 = 20
        
    }
}

class DetailViewController: UIViewController, DetailDisplayLogic {
    struct Layout {}
    var interactor: DetailBusinessLogic?
    var contentTitle: String?
    
    lazy var scrollView: UIScrollView = {
        let sv = UIScrollView()
        sv.translatesAutoresizingMaskIntoConstraints = false
        sv.contentInsetAdjustmentBehavior = .never
        sv.showsVerticalScrollIndicator = false
        return sv
    }()

    lazy var containerView: UIStackView = {
        let stack = UIStackView()
        stack.alignment = .center
        stack.spacing = Layout.ComponentSizes.distance.rawValue
        stack.distribution = .fill
        stack.axis = .vertical
        stack.translatesAutoresizingMaskIntoConstraints = false
        return stack
    }()
    
    lazy var bannerImage: UIImageView = {
        let img = UIImageView()
        img.translatesAutoresizingMaskIntoConstraints = false
        img.contentMode = .scaleAspectFill
        img.backgroundColor = .lightGray
        return img
    }()
        
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configureView()
        loadDetails()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        let appearance = UINavigationBarAppearance()
        appearance.configureWithOpaqueBackground()
        appearance.backgroundColor = .white
        navigationController?.navigationBar.standardAppearance = appearance
        navigationController?.navigationBar.scrollEdgeAppearance = navigationController?.navigationBar.standardAppearance
    }
        
    // MARK: Do something
    
    func loadDetails() {
        let request = Detail.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: Detail.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}

//MARK: Private methods

private extension DetailViewController {
    func configureView() {
        title = contentTitle ?? "Detalhe"
    }
}
