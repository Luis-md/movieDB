//
//  HomeInteractor.swift
//  themovies
//
//  Created by Luis Domingues on 01/05/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func changeSelectedItem(request: Home.MovieGenderFilter.Request)
    func getMovieThemes()
    func getMovies()
    func getPopular()
}

protocol HomeDataStore {
    //var name: String { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    var service: MovieProvider?
    
    var themes: [ContentMovie] = [ContentMovie(isSelected: false, gender: "Filmes"),
                                  ContentMovie(isSelected: false, gender: "Séries"),
                                  ContentMovie(isSelected: false, gender: "Novelas"),
                                  ContentMovie(isSelected: false, gender: "Animes"),
                                  ContentMovie(isSelected: false, gender: "Seriados"),
                                  ContentMovie(isSelected: false, gender: "Filmes"),
                                  ContentMovie(isSelected: false, gender: "Novelas"),
                                  ContentMovie(isSelected: false, gender: "Animes"),
                                  ContentMovie(isSelected: false, gender: "Séries"),]
    
    var coordinator: Coordinator?
    
    // MARK: Do something
    func getMovieThemes() {
        let response = Home.MovieGenderFilter.Response(movies: themes)
        presenter?.presentFilterThemes(response: response)
    }
    
    func changeSelectedItem(request: Home.MovieGenderFilter.Request) {
        var updatedThemes: [ContentMovie] = []
        themes.forEach { content in
            var newContent = content
            newContent.isSelected = false
            updatedThemes.append(newContent)
        }
        themes = updatedThemes
        themes[request.indexClicked].isSelected = true
        
        presenter?.presentUpdatedSelection(response: Home.MovieGenderFilter.Response(movies: themes))

    }
    
    func getMovies() {
        service?.nowPlaying { [weak self] in
            guard let self else { return }
            switch $0 {
            case .success(let movie):
                let response = Home.MovieBanner.Response(images: movie)
                self.presenter?.presentMoviesBanner(response: response)
            case .failure(let error):
                print(error.localizedDescription)
            }
        }
    }
    
    func getPopular() {
        service?.popularMovie { [weak self] in
            guard let self else { return }
            switch $0 {
            case .success(let movie):
                let response = Home.MovieBanner.Response(images: movie)
                self.presenter?.presentPopularMovies(response: response)
            case .failure(let error):
                print(error.localizedDescription)
            }
        }
    }
}
